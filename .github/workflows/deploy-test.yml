name: Test

on:
  pull_request: {}

env:
  ENVIRONMENT: test
  OPENSHIFT_API: https://api.c-appuio-cloudscale-lpg-2.appuio.cloud:6443
  HELM_RELEASE_NAME: website-pr-${{ github.event.number }}
  REGISTRY_URL: registry.cloudscale-lpg-2.appuio.cloud
  IMG_TAG: pr-${{ github.event.number }}
  NAMESPACE: pitc-appuio-website-test

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: preview
    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_URL }}/${{ env.NAMESPACE }}/nginx

      - name: Docker login
        uses: docker/login-action@v1
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: ${{ !startsWith(github.head_ref, 'renovate/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'renovate/') }}
    needs:
      - build
    environment:
      name: preview
      url: https://${{ env.ROUTE_HOST }}
    steps:

      - uses: actions/checkout@v3

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.9.0
        with:
          helm-version: v3.8.1
          helmfile-version: v0.144.0
          install-kubectl: false

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4"

      - name: Create deployment status in PR
        run: |
          curl -X POST -H "Content-Type:application/json" \
              -H "Authorization: token ${{ github.token }}" \
              -d '{"state": "pending", "context": "preview/deploy"}' \
                "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }}"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_API }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ env.NAMESPACE }}

      - name: Deploy app
        run: helmfile -f envs/helmfile.yaml -e ${{ env.ENVIRONMENT }} apply # --wait
        env:
          HELM_RELEASE_NAME: ${{ env.HELM_RELEASE_NAME }}
          IMG_TAG: ${{ env.IMG_TAG }}
          GIT_SHA: ${{ github.event.pull_request.head.sha }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          ORIGIN: .*.${{ env. NAMESPACE }}.appuio.cloud

      - name: Gather status
        run: |
          echo "ROUTE_HOST=$(oc -n ${{ env.NAMESPACE }} get route ${{ env.HELM_RELEASE_NAME }} -o jsonpath='{.spec.host}')" >> $GITHUB_ENV
          curl -X POST -H "Content-Type:application/json" \
              -H "Authorization: token ${{ github.token }}" \
              -d '{"state": "success", "context": "preview/deploy", "description": "Preview deployment ready", "target_url": "https://${{ env.ROUTE_HOST }}"}' \
                "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }}"

      # - run: |
      #     oc process -f manifests/appuio.yml \
      #                -p IMAGE_TAG=${{ github.event.pull_request.head.sha }} \
      #                -p APP_POSTFIX=${{ env.PR_NUMBER }} \
      #                | oc apply -f -
      #     oc process -f manifests/cms/github-oauth-provider.yml \
      #                -p 'ORIGIN=.*.appuioapp.ch' \
      #                -p OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }} \
      #                -p OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }} \
      #                | oc apply -f -
      #     oc rollout latest dc/appuio-${{ env.PR_NUMBER }} || true # could already be running
      #     oc rollout status dc/appuio-${{ env.PR_NUMBER }} # wait
