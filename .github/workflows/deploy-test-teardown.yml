name: Test

on:
  pull_request:
    types:
      - closed

env:
  ENVIRONMENT: test
  OPENSHIFT_API: https://api.c-appuio-cloudscale-lpg-2.appuio.cloud:6443
  HELM_RELEASE_NAME: website-pr-${{ github.event.number }}
  IMG_TAG: pr-${{ github.event.number }}
  NAMESPACE: appuio-website-test

jobs:
  uninstall:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'renovate/') }}
    environment: preview
    steps:

      - uses: actions/checkout@v3

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.9.0
        with:
          helm-version: v3.8.1
          helmfile-version: v0.144.0
          install-kubectl: false

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_API }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ env.NAMESPACE }}
          insecure_skip_tls_verify: true

      - name: Uninstall app
        run: helm -n ${{ env.NAMESPACE }} uninstall ${{ HELM_RELEASE_NAME }} --wait

      - name: Delete image in registry
        run: oc -n ${{ env.NAMESPACE }} delete imagestreamtags nginx:${{ env.IMG_TAG }} --ignore-not-found

      - name: Notify on failure
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ failure() }}
        with:
          issue-number: ${{ github.event.number }}
          body: |
            ## ‚ùå Failed to remove preview deployment

            | | |
            |-|-|
            **Helm release** | ${{ env.NAMESPACE }}/${{ env.HELM_RELEASE_NAME }}
            **Cluster** | ${{ env.OPENSHIFT_API }}

            Please investigate what went wrong in the GitHub actions logs.
            Maintainers can manually remove the deployment by running
            ```bash
            helm -n ${{ env.NAMESPACE }} uninstall ${{ HELM_RELEASE_NAME }} --wait
            oc -n ${{ env.NAMESPACE }} delete imagestreamtags nginx:${{ env.IMG_TAG }} --ignore-not-found
            ```
