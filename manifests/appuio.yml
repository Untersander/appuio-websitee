apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: appuio-${APP_POSTFIX}
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: appuio
    name: appuio-${APP_POSTFIX}
  spec:
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      app: appuio
      deploymentconfig: appuio-${APP_POSTFIX}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: appuio
          deploymentconfig: appuio-${APP_POSTFIX}
      spec:
        containers:
        - image: registry.puzzle.ch/puzzle/appuio-website:${IMAGE_TAG}
          imagePullPolicy: Always
          name: appuio
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: appuio
    name: appuio-${APP_POSTFIX}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: appuio
      deploymentconfig: appuio-${APP_POSTFIX}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: appuio
    name: appuio-${APP_POSTFIX}
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: appuio-${APP_POSTFIX}
      weight: 100
    wildcardPolicy: None
parameters:
- name: APP_POSTFIX
  description: "Postfix of the resources. Is used to deploy multiple instances of the dc in the same namespace."
  required: true
- name: IMAGE_TAG
  description: The Docker image tag
